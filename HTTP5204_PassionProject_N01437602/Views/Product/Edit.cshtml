@model HTTP5204_PassionProject_N01437602.Models.UpdateProduct

@{
    ViewBag.Title = "Edit";
}

<h2>Update Listing</h2>

<div class="editContainer">
    @using (Html.BeginForm("Edit", "Product", new { id = Model.product.ProductID }, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Please update your listing information here.</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.product.ProductID, new { Name = "ProductID" })

            <div class="form-group">
                @Html.LabelFor(model => model.product.ProductPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.product.ProductPrice, new { htmlAttributes = new { @class = "form-control", Name = "ProductPrice" } })
                    @Html.ValidationMessageFor(model => model.product.ProductPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.product.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.product.ProductName, new { htmlAttributes = new { @class = "form-control", Name = "ProductName" } })
                    @Html.ValidationMessageFor(model => model.product.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.product.ProductDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.product.ProductDesc, new { htmlAttributes = new { @class = "form-control", Name = "ProductDesc" } })
                    @Html.ValidationMessageFor(model => model.product.ProductDesc, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.product.ProductCondition, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.product.ProductCondition, new { htmlAttributes = new { @class = "form-control", Name = "ProductCondition" } })
                    @Html.ValidationMessageFor(model => model.product.ProductCondition, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.product.ProductGender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.product.ProductGender, new { htmlAttributes = new { @class = "form-control", Name = "ProductGender" } })
                    @Html.ValidationMessageFor(model => model.product.ProductGender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.product.ProductColour, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.product.ProductColour, new { htmlAttributes = new { @class = "form-control", Name = "ProductColour" } })
                    @Html.ValidationMessageFor(model => model.product.ProductColour, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.product.ProductType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.product.ProductType, new { htmlAttributes = new { @class = "form-control", Name = "ProductType" } })
                    @Html.ValidationMessageFor(model => model.product.ProductType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.product.ProductSize, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.product.ProductSize, new { htmlAttributes = new { @class = "form-control", Name = "ProductSize" } })
                    @Html.ValidationMessageFor(model => model.product.ProductSize, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.product.UserID, "UserID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.product.UserID, new { htmlAttributes = new { @class = "form-control", Name = "UserID" } })
                    @Html.ValidationMessageFor(model => model.product.UserID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Picture", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10"><input type="file" name="ProductPic" /></div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    <div class="viewContainer">
        @{
            string pic = "/Content/Products/default-Product-icon.jpg";
            string alt = "No Product Picture Provided";
            if (Model.product.ProductHasPic)
            {
                pic = "/Content/Products/" + Model.product.ProductID + "." + Model.product.ProductPicExtension;
                alt = "Product image of " + Model.product.ProductName;
            }
        }

        <div class="imgContainer">
            <h4>Current Image</h4>
            <img src="@pic" alt="@alt" />
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "List")
</div>
